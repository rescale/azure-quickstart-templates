{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "apiVersion": {
      "type": "string",
      "metadata": {
        "description": "The API version"
      }
    },
    "location": {
      "type": "string",
      "metadata": {
        "description": "The location in which the resources are created"
      }
    },
    "nicName": {
      "type": "string",
      "metadata": {
        "description": "The network interface name for the VM"
      }
    },
    "subnetId": {
      "type": "string",
      "metadata": {
        "description": "The Id of the subnet in which the node is created"
      }
    },
    "vmName": {
      "type": "string",
      "metadata": {
        "description": "The VM name"
      }
    },
    "vmSize": {
      "type": "string",
      "metadata": {
        "description": "The VM role size"
      }
    },
    "storageAccountName": {
      "type": "string",
      "metadata": {
        "description": "The storage account name to store the VHD of the VM"
      }
    },
    "imgUri": {
      "type": "string",
      "metadata": {
        "description": "The uri of the custom compute image"
      }
    },
    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "The user name of the administrator"
      }
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "The password of the administrator"
      }
    },
    "availabilitySetName": {
      "type": "string",
      "metadata": {
        "description": "The availability set name"
      }
    },
    "customData": {
      "type": "string",
      "metadata": {
        "description": "The custom data in base64 format"
      }
    },
    "scriptBaseUri": {
      "type": "string",
      "metadata": {
        "description": "The base URI of the script"
      }
    },
    "clusterName": {
      "type": "string",
      "metadata": {
        "description": "The HPC cluster name"
      }
    },
    "privateDomainName": {
      "type": "string",
      "metadata": {
        "description": "The fully qualified domain name (FQDN) for the private domain forest which will be created by this template, for example 'hpc.local'."
      }
    },
    "computeNodePostConfigScript": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Optional URL of a public available PowerShell script you want to run on the compute nodes after they are configured. You can also specify arguments for the script, for example 'http://www.consto.com/mypostscript.ps1 -Arg1 arg1 -Arg2 arg2'."
      }
    },
    "loadBalancerName": {
      "type": "string",
      "metadata": {
        "description": "Load balancer name"
      }
    },
    "sshPort": {
      "type": "int",
      "metadata": {
        "description": "SSH port"
      }
    },
    "rdpPort": {
      "type": "int",
      "metadata": {
        "description": "RDP port"
      }
    },
    "scriptStorageAccountName": {
      "type": "string",
      "metadata": {
        "description": "Storage account for scripts"
      }
    },
    "scriptStorageAccountKey": {
      "type": "securestring",
      "metadata": {
        "description": "Key for script storage account"
      }
    },
    "customScriptCommand": {
      "type": "string",
      "metadata": {
        "description": "Key for script storage account"
      }
    },
    "customScripts": {
      "type": "array",
      "metadata": {
        "description": "List of custom scripts to run after provisioning"
      }
    }
  },
  "variables":{
    "osDiskUri": "[concat('http://',parameters('scriptStorageAccountName'),'.blob.core.windows.net/vhds/', resourceGroup().name, '-', toLower(parameters('vmName')), '-os', uniqueString(parameters('subnetId')), '.vhd')]",
    "sshNatName": "[concat(parameters('loadBalancerName'), '/', parameters('vmName'), 'SSH-VM')]",
    "rdpNatName": "[concat(parameters('loadBalancerName'), '/', parameters('vmName'), 'RDP-VM')]",
    "lbID": "[resourceId('Microsoft.Network/loadBalancers', parameters('loadBalancerName'))]",
    "frontEndIPConfigID": "[concat(variables('lbID'),'/frontendIPConfigurations/loadBalancerFrontEnd')]"
  },
  "resources": [
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/loadBalancers/inboundNatRules",
      "name": "[variables('sshNatName')]",
      "location": "[parameters('location')]",
      "properties": {
        "frontendIPConfiguration": {
          "id": "[variables('frontEndIPConfigID')]"
        },
        "protocol": "tcp",
        "frontendPort": "[parameters('sshPort')]",
        "backendPort": 22,
        "enableFloatingIP": false
      }
    },

    {
      "apiVersion": "[parameters('apiVersion')]",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[parameters('nicName')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/loadBalancers/', parameters('loadBalancerName'), '/inboundNatRules/', parameters('vmName'), 'SSH-VM')]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "IPConfig",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[parameters('subnetId')]"
              },
              "loadBalancerBackendAddressPools": [
                {
                  "id": "[concat(variables('lbID'), '/backendAddressPools/LoadBalancerBackend')]"
                }
              ],
              "loadBalancerInboundNatRules": [
                {
                  "id": "[concat(variables('lbID'),'/inboundNatRules/', parameters('vmName'), 'SSH-VM')]"
                }
              ]
            }
          }
        ]
      }
    },
    {
      "apiVersion": "[parameters('apiVersion')]",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[parameters('vmName')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/networkInterfaces/', parameters('nicName'))]"
      ],
      "properties": {
        "availabilitySet": {
          "id": "[resourceId('Microsoft.Compute/availabilitySets', parameters('availabilitySetName'))]"
        },
        "hardwareProfile": {
          "vmSize": "[parameters('vmSize')]"
        },
        "osProfile": {
          "computerName": "[parameters('vmName')]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]",
          "customData": "[parameters('customData')]"
        },
        "storageProfile": {
          "osDisk": {
            "name": "osdisk",
            "osType": "Windows",
            "image": {
              "uri": "[parameters('imgUri')]"
            },
            "vhd": {
              "uri": "[variables('osDiskUri')]"
            },
            "caching": "ReadOnly",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', parameters('nicName'))]"
            }
          ]
        }
      },
      "resources": [
        {
          "type": "Microsoft.Compute/virtualMachines/extensions",
          "name": "[concat(parameters('vmName'), '/configureComputeNode')]",
          "apiVersion": "[parameters('apiVersion')]",
          "location": "[parameters('location')]",
          "dependsOn": [
            "[concat('Microsoft.Compute/virtualMachines/', parameters('vmName'))]"
          ],
          "properties": {
            "publisher": "Microsoft.Powershell",
            "type": "DSC",
            "typeHandlerVersion": "2.13",
            "settings": {
              "modulesUrl": "[concat(parameters('scriptBaseUri'),'/ConfigComputeNode.ps1.zip')]",
              "configurationFunction": "ConfigComputeNode.ps1\\ConfigComputeNode",
              "wmfVersion": "4.0",
              "Properties": {
                "DomainName": "[parameters('privateDomainName')]",
                "AdminCreds": {
                  "UserName": "[parameters('adminUsername')]",
                  "Password": "PrivateSettingsRef:AdminPassword"
                },
                "PostConfigScript": "[parameters('computeNodePostConfigScript')]"
              }
            },
            "protectedSettings": {
              "Items": {
                "AdminPassword": "[parameters('adminPassword')]"
              }
            }
          }
        }
      ]
    },
    {
      "apiVersion": "[parameters('apiVersion')]",
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(parameters('vmName'), '/CustomScriptExtension')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachines/', parameters('vmName'), '/extensions/configureComputeNode')]"
      ],
      "properties": {
        "publisher": "Microsoft.Compute",
        "type": "CustomScriptExtension",
        "typeHandlerVersion": "1.4",
        "settings": {
          "fileUris": "[parameters('customScripts')]",
          "commandToExecute": "[concat('powershell -ExecutionPolicy Unrestricted -File ', parameters('customScriptCommand'))]"
        },
        "protectedSettings": {
          "storageAccountName": "[parameters('scriptStorageAccountName')]",
          "storageAccountKey": "[parameters('scriptStorageAccountKey')]"
        }
      }
    }

  ]
}
